<launch>

    <!-- The robot description -->
    <param name="robot_description" textfile="$(find layered_hardware_unitree)/urdf/single_unitree_example.urdf" />

    <!-- Hardware driver -->
    <node name="example_layered_hardware_node" pkg="layered_hardware" type="layered_hardware_node" output="screen">
        <rosparam>
            control_frequency: 20
            use_expected_period: true
            # upper (controller-side) to bottom (actuator-side)
            layers: [ joint_limits_layer, transmission_layer, unitree_actuator_layer ]
            joint_limits_layer:
                type: layered_hardware_extensions/ExtendedJointLimitsLayer
            transmission_layer:
                type: layered_hardware/TransmissionLayer
            unitree_actuator_layer:
                type: layered_hardware_unitree/UnitreeActuatorLayer
                serial_interface: /dev/serial/by-id/usb-FTDI_USB__-__Serial_Converter_FT73B7MT-if00-port0
                actuators:
                    unitree_actuator:
                        id: 3
                        motor_type: GO-M8010-6
                        temperature_limit: 80
                        operating_mode_map:
                            velocity: velocity
                            effort: torque
        </rosparam>
    </node>

    <!-- Controller parameters -->
    <rosparam>
        joint_state_controller:
            type: joint_state_controller/JointStateController
            publish_rate: 20
        additional_state_controller:
            type: integer_controllers/Int32StateController
            interval: 1.0
        velocity_controller:
            type: velocity_controllers/JointVelocityController
            joint: unitree_joint
        effort_controller:
            type: effort_controllers/JointEffortController
            joint: unitree_joint
        reboot_controller:
            type: empty_controller/EmptyController
        controller_groups:
            velocity:
                - joint_state_controller
                - velocity_controller
            effort:
                - joint_state_controller
                - effort_controller
    </rosparam>

    <!-- Controller starter -->
    <node name="controller_starter" pkg="controller_manager" type="controller_group" output="screen"
          args="switch velocity" />

    <!-- joint state msg to tf -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />

</launch>
