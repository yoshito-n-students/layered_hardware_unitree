<launch>

    <node name="joy" pkg="joy" type="joy_node">
      <param name="autorepeat_rate" value="100."/>
    </node>

    <node pkg="teleop_twist_joy" name="teleop_twist_joy" type="teleop_node">
      <rosparam>
        axis_linear: 1
        scale_linear: 0.7
        scale_linear_turbo: 1.5

        axis_angular: 3
        scale_angular: 4.

        enable_button: 4  # L2 shoulder button
        enable_turbo_button: 10  # L1 shoulder button
      </rosparam>
      <remap from="cmd_vel" to="/diff_drive_controller/cmd_vel"/>
    </node>

    <!-- The robot description -->
    <param name="robot_description" textfile="$(find layered_hardware_unitree)/urdf/skid_steer_unitree_example.urdf" />

    <!-- Hardware driver -->
    <node name="example_layered_hardware_node" pkg="layered_hardware" type="layered_hardware_node" output="screen">
        <rosparam>
            control_frequency: 100
            use_expected_period: true
            # upper (controller-side) to bottom (actuator-side)
            layers: [ joint_limits_layer, transmission_layer, unitree_actuator_layer ]
            joint_limits_layer:
                type: layered_hardware_extensions/ExtendedJointLimitsLayer
            transmission_layer:
                type: layered_hardware/TransmissionLayer
            unitree_actuator_layer:
                type: layered_hardware_unitree/UnitreeActuatorLayer
                serial_interface: /dev/ttyUSB0
                actuators:
                    fr_actuator:
                        id: 0
                        motor_type: GO-M8010-6
                        operating_mode_map:
                            velocity: velocity
                            effort: torque
                        torque_limits: [0.1, 0.4]
                        temperature_limit: 80
                    fl_actuator:
                        id: 1
                        motor_type: GO-M8010-6
                        operating_mode_map:
                            velocity: velocity
                            effort: torque
                        torque_limits: [0.1, 0.4]
                        temperature_limit: 80
                    # rr_actuator:
                    #     id: 2
                    #     motor_type: GO-M8010-6
                    #     operating_mode_map:
                    #         velocity: velocity
                    #         effort: torque
                    #     torque_limit: 0.01
                    #     temperature_limit: 80
                    # rl_actuator:
                    #     id: 3
                    #     motor_type: GO-M8010-6
                    #     operating_mode_map:
                    #         velocity: velocity
                    #         effort: torque
        </rosparam>
    </node>

    <!-- Controller parameters -->
    <rosparam>
        joint_state_controller:
            type: joint_state_controller/JointStateController
            publish_rate: 20
        temperature_state_controller:
            type: integer_controllers/Int32StateController
            interval: 1.0
        velocity_fr_controller:
            type: velocity_controllers/JointVelocityController
            joint: fr_joint
        velocity_fl_controller:
            type: velocity_controllers/JointVelocityController
            joint: fl_joint
        velocity_rr_controller:
            type: velocity_controllers/JointVelocityController
            joint: rr_joint
        velocity_rl_controller:
            type: velocity_controllers/JointVelocityController
            joint: rl_joint
        diff_drive_controller:
            type: diff_drive_controller/DiffDriveController
            right_wheel: [fr_joint]
            left_wheel: [fl_joint]
            cmd_vel_timeout: 0.1
            enable_odom_tf: false
            wheel_separation: 0.5
            wheel_radius: 0.1
            pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
            twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
        effort_controller:
            type: effort_controllers/JointEffortController
            joint: unitree_joint
        reboot_controller:
            type: empty_controller/EmptyController
        controller_groups:
            velocity:
                - joint_state_controller
                - diff_drive_controller
                - temperature_state_controller
            effort:
                - joint_state_controller
                - effort_controller
    </rosparam>

    <!-- Controller starter -->
    <node name="controller_starter" pkg="controller_manager" type="controller_group" output="screen"
          args="switch velocity" />

    <!-- joint state msg to tf -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />

</launch>